<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.jloeve.aigou.mappers.ProductMapper">
    <resultMap id="ProductTypeResult" type="ProductType">
        <id property="uuid" column="product_type_uuid"/>
        <result column="product_type_name" property="name"/>
        <result column="product_type_desc" property="desc"/>
        <result column="product_type_icon_class_name" property="iconClassName"/>
    </resultMap>
    <resultMap id="BrandResult" type="Brand">
        <id property="uuid" column="product_brand_uuid"/>
        <result column="product_brand_name" property="name"/>
        <result column="product_brand_image_file_name" property="imageFileName"/>
        <association property="type" resultMap="ProductTypeResult"/>
    </resultMap>
    <resultMap id="ProductResult" type="Product">
        <id column="product_uuid" property="uuid"/>
        <result column="product_name" property="name"/>
        <result column="product_image_file_name" property="imageFileName"/>
        <result column="product_price" property="price"/>
        <result column="product_desc" property="desc"/>
        <result column="product_sale_count" property="saleCount"/>
        <result column="product_create_time" property="createTime"/>
        <association property="type" resultMap="ProductTypeResult"/>
        <association property="brand" resultMap="BrandResult"/>
    </resultMap>
    <sql id="productOneTableBasicQuery">
        SELECT SUM(IFNULL(`product_count`, 0)) AS product_sale_count,
               BIN_TO_UUID(s_product.uuid)     AS product_uuid,
               BIN_TO_UUID(`type_uuid`)        AS product_type_uuid,
               `name`                          AS product_name,
               `image_file_name`               AS product_image_file_name,
               `price`                         AS product_price,
               `desc`                          AS product_desc,
               `create_time`                   AS product_create_time,
               BIN_TO_UUID(`brand_uuid`)       AS product_brand_uuid
        FROM s_product
                 LEFT JOIN `s_order_product` ON s_order_product.product_uuid = s_product.uuid
        GROUP BY s_product.uuid
    </sql>
    <select id="queryByUUID" resultMap="ProductResult">
        <include refid="productOneTableBasicQuery"/>
        HAVING product_uuid = #{uuid}
    </select>
    <select id="queryNewProducts" resultMap="ProductResult">
        <include refid="productOneTableBasicQuery"/>
        ORDER BY `create_time` DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>
    <select id="queryByProductTypeName" resultMap="ProductResult">
        SELECT
        SUM(IFNULL(`product_count`, 0)) AS product_sale_count,
        BIN_TO_UUID(s_product.uuid) AS product_uuid,
        BIN_TO_UUID(`type_uuid`) AS product_type_uuid,
        s_product.`name` AS product_name,
        `image_file_name` AS product_image_file_name,
        `price` AS product_price,
        s_product.`desc` AS product_desc,
        `create_time` AS product_create_time,
        BIN_TO_UUID(`brand_uuid`) AS product_brand_uuid,
        BIN_TO_UUID(s_product_type.uuid) AS product_type_uuid,
        s_product_type.`name` AS product_type_name,
        s_product_type.`desc` AS product_type_desc,
        s_product_type.icon_class_name AS product_type_icon_class_name
        FROM s_product
        LEFT JOIN `s_order_product` ON s_order_product.product_uuid = s_product.uuid
        LEFT JOIN `s_product_type` ON s_product.type_uuid = s_product_type.uuid
        GROUP BY s_product.uuid
        <if test="productTypeName != null">
            HAVING s_product_type.name = #{productTypeName}
        </if>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>
    <select id="queryBySales" resultMap="ProductResult">
        <include refid="productOneTableBasicQuery"/>
        ORDER BY `product_sale_count` DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="queryByParams" resultMap="ProductResult">
        <include refid="productOneTableBasicQuery"/>
        <trim prefix="HAVING" prefixOverrides="AND |OR ">
            <if test="productTypeUUID != null">
                product_type_uuid = #{productTypeUUID}
            </if>
            <if test="brandUUIDs != null">
                AND product_brand_uuid IN
                <foreach collection="brandUUIDs" open="(" close=")" separator=", " item="value">
                    #{value}
                </foreach>
            </if>
            <if test="keyword != null">
                AND product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </trim>
    </select>
</mapper>